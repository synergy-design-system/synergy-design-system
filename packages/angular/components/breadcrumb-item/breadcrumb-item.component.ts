// ---------------------------------------------------------------------
// ðŸ”’ AUTOGENERATED @synergy-design-system/angular wrappers for @synergy-design-system/components
// Please do not edit this file directly!
// It will get recreated when running pnpm build.
// ---------------------------------------------------------------------
import {
  Component,
  ElementRef,
  NgZone,
  Input,
  Output,
  EventEmitter,
  AfterContentInit,
} from '@angular/core';
import type { SynBreadcrumbItem } from '@synergy-design-system/components';

import '@synergy-design-system/components/components/breadcrumb-item/breadcrumb-item.js';

/**
 * @summary Breadcrumb Items are used inside [breadcrumbs](/components/breadcrumb) to represent different links.
 * @documentation https://synergy-design-system.github.io/?path=/docs/components-syn-breadcrumb-item--docs
 * @status stable
 * @since 2.0
 *
 * @slot - The breadcrumb item's label.
 * @slot prefix - An optional prefix, usually an icon or icon button.
 * @slot suffix - An optional suffix, usually an icon or icon button.
 * @slot separator - The separator to use for the breadcrumb item. This will only change the separator for this item. If
 * you want to change it for all items in the group, set the separator on `<syn-breadcrumb>` instead.
 *
 * @csspart base - The component's base wrapper.
 * @csspart label - The breadcrumb item's label.
 * @csspart prefix - The container that wraps the prefix.
 * @csspart suffix - The container that wraps the suffix.
 * @csspart separator - The container that wraps the separator.
 */
@Component({
  selector: 'syn-breadcrumb-item',
  standalone: true,
  template: '<ng-content></ng-content>',
})
export class SynBreadcrumbItemComponent {
  public nativeElement: SynBreadcrumbItem;
  private _ngZone: NgZone;

  constructor(e: ElementRef, ngZone: NgZone) {
    this.nativeElement = e.nativeElement;
    this._ngZone = ngZone;
  }

  /**
* Optional URL to direct the user to when the breadcrumb item is activated.
* When set, a link will be rendered
internally.
* When unset, a button will be rendered instead.
 */
  @Input()
  set href(v: SynBreadcrumbItem['href']) {
    this._ngZone.runOutsideAngular(() => (this.nativeElement.href = v));
  }
  get href(): SynBreadcrumbItem['href'] {
    return this.nativeElement.href;
  }

  /**
   * Tells the browser where to open the link.
   * Only used when `href` is set.
   */
  @Input()
  set target(v: SynBreadcrumbItem['target']) {
    this._ngZone.runOutsideAngular(() => (this.nativeElement.target = v));
  }
  get target(): SynBreadcrumbItem['target'] {
    return this.nativeElement.target;
  }

  /**
   * The `rel` attribute to use on the link.
   * Only used when `href` is set.
   */
  @Input()
  set rel(v: SynBreadcrumbItem['rel']) {
    this._ngZone.runOutsideAngular(() => (this.nativeElement.rel = v));
  }
  get rel(): SynBreadcrumbItem['rel'] {
    return this.nativeElement.rel;
  }
}
