// ---------------------------------------------------------------------
// ðŸ”’ AUTOGENERATED @synergy-design-system/angular wrappers for @synergy-design-system/components
// Please do not edit this file directly!
// It will get recreated when running pnpm build.
// ---------------------------------------------------------------------
import {
  Component,
  ElementRef,
  NgZone,
  Input,
  Output,
  EventEmitter,
  AfterContentInit,
} from '@angular/core';
import type { SynTab } from '@synergy-design-system/components';
import type { SynCloseEvent } from '@synergy-design-system/components';
import '@synergy-design-system/components/components/tab/tab.js';

/**
 * @summary Tabs are used inside [tab groups](/components/tab-group) to represent and activate [tab panels](/components/tab-panel).
 * @documentation https://synergy-design-system.github.io/?path=/docs/components-syn-tab--docs
 * @status stable
 * @since 2.0
 *
 * @dependency syn-icon-button
 *
 * @slot - The tab's label.
 *
 * @event syn-close - Emitted when the tab is closable and the close button is activated.
 *
 * @csspart base - The component's base wrapper.
 * @csspart close-button - The close button, an `<syn-icon-button>`.
 * @csspart close-button__base - The close button's exported `base` part.
 */
@Component({
  selector: 'syn-tab',
  standalone: true,
  template: '<ng-content></ng-content>',
})
export class SynTabComponent {
  public nativeElement: SynTab;
  private _ngZone: NgZone;

  constructor(e: ElementRef, ngZone: NgZone) {
    this.nativeElement = e.nativeElement;
    this._ngZone = ngZone;
    this.nativeElement.addEventListener('syn-close', (e: SynCloseEvent) => {
      this.synCloseEvent.emit(e);
    });
  }

  /**
   * The name of the tab panel this tab is associated with.
   * The panel must be located in the same tab group.
   */
  @Input()
  set panel(v: SynTab['panel']) {
    this._ngZone.runOutsideAngular(() => (this.nativeElement.panel = v));
  }
  get panel(): SynTab['panel'] {
    return this.nativeElement.panel;
  }

  /**
   * Draws the tab in an active state.
   */
  @Input()
  set active(v: '' | SynTab['active']) {
    this._ngZone.runOutsideAngular(
      () => (this.nativeElement.active = v === '' || v),
    );
  }
  get active(): SynTab['active'] {
    return this.nativeElement.active;
  }

  /**
   * Makes the tab closable and shows a close button.
   */
  @Input()
  set closable(v: '' | SynTab['closable']) {
    this._ngZone.runOutsideAngular(
      () => (this.nativeElement.closable = v === '' || v),
    );
  }
  get closable(): SynTab['closable'] {
    return this.nativeElement.closable;
  }

  /**
   * Disables the tab and prevents selection.
   */
  @Input()
  set disabled(v: '' | SynTab['disabled']) {
    this._ngZone.runOutsideAngular(
      () => (this.nativeElement.disabled = v === '' || v),
    );
  }
  get disabled(): SynTab['disabled'] {
    return this.nativeElement.disabled;
  }

  /**
   * Emitted when the tab is closable and the close button is activated.
   */
  @Output() synCloseEvent = new EventEmitter<SynCloseEvent>();
}

export type { SynCloseEvent } from '@synergy-design-system/components';
