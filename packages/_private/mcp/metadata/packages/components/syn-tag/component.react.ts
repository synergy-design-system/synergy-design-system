// ---------------------------------------------------------------------
// ðŸ”’ AUTOGENERATED @synergy-design-system/react wrappers for @synergy-design-system/components
// Please do not edit this file directly!
// It will get recreated when running pnpm build.
// ---------------------------------------------------------------------
import * as React from 'react';
import { createComponent } from '@lit/react';
import Component from '@synergy-design-system/components/components/tag/tag.component.js';

import { type EventName } from '@lit/react';
import type { SynRemoveEvent } from '@synergy-design-system/components';

const tagName = 'syn-tag';
Component.define('syn-tag');

/**
 * @summary Tags are used as labels to organize things or to indicate a selection.
 * @documentation https://synergy-design-system.github.io/?path=/docs/components-syn-tag--docs
 * @status stable
 * @since 2.0
 *
 * @dependency syn-icon-button
 *
 * @slot - The tag's content.
 *
 * @event syn-remove - Emitted when the remove button is activated.
 *
 * @csspart base - The component's base wrapper.
 * @csspart content - The tag's content.
 * @csspart remove-button - The tag's remove button, an `<syn-icon-button>`.
 * @csspart remove-button__base - The remove button's exported `base` part.
 */
export const SynTag = createComponent({
  displayName: 'SynTag',
  elementClass: Component,
  events: {
    onSynRemove: 'syn-remove' as EventName<SynRemoveEvent>,
  },
  react: React,
  tagName,
});

export type { SynRemoveEvent } from '@synergy-design-system/components';
