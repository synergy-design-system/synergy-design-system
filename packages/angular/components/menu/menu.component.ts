// ---------------------------------------------------------------------
// ðŸ”’ AUTOGENERATED @synergy-design-system/angular wrappers for @synergy-design-system/components
// Please do not edit this file directly!
// It will get recreated when running pnpm build.
// ---------------------------------------------------------------------
import {
  Component,
  ElementRef,
  NgZone,
  Input,
  Output,
  EventEmitter,
  AfterContentInit,
} from '@angular/core';
import type { SynMenu } from '@synergy-design-system/components';
import type { SynSelectEvent } from '@synergy-design-system/components';
import '@synergy-design-system/components/components/menu/menu.js';

/**
 * @summary Menus provide a list of options for the user to choose from.
 * @documentation https://synergy-design-system.github.io/?path=/docs/components-syn-menu--docs
 * @status stable
 * @since 2.0
 *
 * @slot - The menu's content, including menu items, menu labels, and dividers.
 *
 * @event {{ item: SynMenuItem }} syn-select - Emitted when a menu item is selected.
 */
@Component({
  selector: 'syn-menu',
  standalone: true,
  template: '<ng-content></ng-content>',
})
export class SynMenuComponent {
  public nativeElement: SynMenu;
  private _ngZone: NgZone;

  constructor(e: ElementRef, ngZone: NgZone) {
    this.nativeElement = e.nativeElement;
    this._ngZone = ngZone;
    this.nativeElement.addEventListener('syn-select', (e: SynSelectEvent) => {
      this.synSelectEvent.emit(e);
    });
  }

  /**
   * Emitted when a menu item is selected.
   */
  @Output() synSelectEvent = new EventEmitter<SynSelectEvent>();
}

export type { SynSelectEvent } from '@synergy-design-system/components';
