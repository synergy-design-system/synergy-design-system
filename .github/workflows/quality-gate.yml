name: Quality Gate

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  # Job that will check for uncommitted changes after builds
  build-check:
    name: Commit check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
      - name: Check for uncommitted changes
        run: git diff --exit-code

  # Check for formatting issues
  format-check:
    name: Format check
    runs-on: ubuntu-latest
    needs: build-check
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
        with:
          with-build: 'false'
      - name: Check for formatting issues
        run: pnpm exec prettier . -c

  # Check for lint errors
  lint-check:
    name: Lint check
    runs-on: ubuntu-latest
    needs: build-check
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
      - name: Lint
        run: pnpm lint
      - name: Check for uncommitted changes
        run: git diff --exit-code

  # Check for vendorism issues
  vendorism-check:
    name: Vendorism check
    runs-on: ubuntu-latest
    needs: build-check
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
      - name: Check for initial uncommitted changes
        run: git diff --exit-code
      - name: Vendorism
        run: cd packages/components && pnpm vendor.get && pnpm vendor.set && pnpm build --synergy
      - name: Check for uncommitted changes after vendoring
        run: git diff --exit-code

  # Check if the MCP server metadata is valid
  mcp-metadata-check:
    name: MCP metadata check
    runs-on: ubuntu-latest
    needs: build-check
    container:
      image: mcr.microsoft.com/playwright:v1.56.0-noble
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # Install git to ensure the repository is safe
      # see https://github.com/actions/checkout/issues/363#issuecomment-2624179541
      - run: git config --global --add safe.directory $PWD

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm   
      - name: MCP Unittests
        run: pnpm -r --filter 'mcp' test
      - name: Create full build of MCP metadata (including storybook)
        run: pnpm -C packages/mcp build:all
      - name: Check for uncommitted changes
        run: git diff --exit-code .

  # Test tokens package independently
  tokens-test:
    name: Validate tests (tokens)
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: build-check
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
        with:
          install-command: 'PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=true pnpm install'
          build-command: pnpm --filter 'tokens' build

      - name: Run tests (tokens)
        run: pnpm test
        working-directory: packages/tokens

  # Component unit tests are run standalone
  component-test:
    name: Validate tests (components) ${{ matrix.browser }}
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: build-check
    container:
      image: mcr.microsoft.com/playwright:v1.56.0-noble
    strategy:
      fail-fast: true
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - uses: actions/checkout@v4

      # Setup, but only run build for components
      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
        with:
          # #854: We are only building the components and tokens packages
          # This is done to speed up the build time
          build-command: pnpm -r --filter 'tokens' --filter 'components' build --synergy

      - name: Run tests (components)
        run: BROWSERS=${{ matrix.browser }} pnpm test
        working-directory: packages/components
        # @see https://github.com/microsoft/playwright/issues/6500
        env:
          HOME: /root

  # E2E Tests
  e2e-test:
    name: Validate tests (e2e) (${{ matrix.framework }}/${{ matrix.browser }})
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: build-check
    container:
      image: mcr.microsoft.com/playwright:v1.56.0-noble
    strategy:
      fail-fast: true
      matrix:
        framework: [react, angular, vue, vanilla]
        browser: [chromium, firefox, webkit]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
        with:
          # Make sure to exclude unneeded packages to speed up the build.
          build-command: pnpm -r --filter='!@synergy-design-system/docs' --filter='!@synergy-design-system/mcp' build

      # We run all tests except the components tests
      # This is done as the components test toolchain will
      # create a new bundle that may cause issues
      - name: Run tests
        run: pnpm test.${{ matrix.framework }} --project=${{ matrix.browser }}
        working-directory: packages/_private/e2e-demo-test
        # @see https://github.com/microsoft/playwright/issues/6500
        env:
          HOME: /root
          TEST_FRAMEWORK: ${{ matrix.framework }}

  # Chromatic deployment
  chromatic-deploy:
    name: Validate Chromatic
    runs-on: ubuntu-latest
    # check pull request title
    if: ${{ github.event.pull_request.draft == false && !contains(github.event.pull_request.title, '[skip chromatic]')}}
    needs: [build-check, format-check, lint-check, vendorism-check, mcp-metadata-check, component-test, e2e-test, tokens-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # ðŸ‘ˆ Required to retrieve git history
          # ðŸ‘‡ Tells the checkout which commit hash to reference
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
        with:
          install-command: 'PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=true pnpm install'
          with-build: 'true'

      # ðŸ‘‡ Adds Chromatic as a step in the workflow
      - name: Publish to Chromatic
        uses: chromaui/action@latest
        # Options required to the GitHub Chromatic Action
        with:
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          # Speedup the build by not waiting until everything is sent to Chromatic
          exitOnceUploaded: true
          # We need to manually build storybook with pnpm
          storybookBuildDir: packages/docs/dist
          configFile: packages/docs/chromatic.config.json
