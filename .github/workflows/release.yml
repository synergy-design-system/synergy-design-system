name: Release new version

on:
  push:
    branches:
      - "main"

permissions:
  contents: write # needed to push changes

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
        with:
          install-command: 'PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=true pnpm install'

      # Make sure pnpm is able to release
      # @see https://github.com/pnpm/pnpm/issues/3141#issuecomment-1305563972
      - name: Setup PNPM publish config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_RELEASE_TOKEN_CS}}

      - name: Creating releases via Changesets
        env:
          # Legacy GH_TOKEN, may be removed if not needed.
          GH_TOKEN: ${{ secrets.GH_RELEASE_BUILDUSERSICKAG }}
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_BUILDUSERSICKAG }}
          NPM_TOKEN: ${{ secrets.NPM_RELEASE_TOKEN_CS }}
        run: |
          # Final release process

          # Creates changelogs and bumps versions
          pnpm changeset version

          # Save the changes to git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          
          # Commit changes and store exit code
          git commit -m "chore: ðŸš€ version packages [skip ci]"
          COMMIT_EXIT_CODE=$?
          
          # Only proceed if there were changes to commit
          if [ $COMMIT_EXIT_CODE -eq 0 ]; then
            git push origin main

            # Create the new tags we need
            pnpm changeset tag

            # Push tags to remote
            git push --tags

            # Finally, push to the registry
            pnpm publish --recursive --access=public
          else
            echo "No changes to commit, skipping release process"
          fi

      # This workflow triggers the Storybook deployment
      - name: Releases done
        run: echo "Releases done â€“ Storybook deployment will be triggered now"
