name: Quality Gate

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  quality-gate:
    name: Validate build, lint, vendor and git diff
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Check for uncommitted changes
        run: git diff --exit-code

      - name: Check for formatting issues
        run: pnpm exec prettier . -c

      - name: Lint
        run: pnpm lint

      - name: Check for uncommitted changes
        run: git diff --exit-code

      - name: Vendorism
        run: cd packages/components && pnpm vendor.get && pnpm vendor.set && pnpm build --synergy

      - name: Check for uncommitted changes
        run: git diff --exit-code

      - name: Release (Dry)
        run: pnpm release.dry

  test_components:
    name: Validate tests (components)
    timeout-minutes: 30
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.41.2-jammy
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Run component tests
        run: pnpm test -r --filter 'components'
        # @see https://github.com/microsoft/playwright/issues/6500
        env:
          HOME: /root

  test_e2e:
    name: Validate tests (e2e)
    timeout-minutes: 30
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.50.0-jammy
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      # We run all tests except the components tests
      # This is done as the components test toolchain will
      # create a new bundle that may cause issues
      - name: Run Playwright tests
        run: pnpm test -r --filter '!components'
        # @see https://github.com/microsoft/playwright/issues/6500
        env:
          HOME: /root

    # Uncomment this for screenshot based tests
    # @todo: Add regviz support
    # - uses: actions/upload-artifact@v3
    #   if: always()
    #   with:
    #     name: playwright-report
    #     path: playwright-report/
    #     retention-days: 30

  chromatic-deployment:
    name: Validate Chromatic
    runs-on: ubuntu-latest
    # check pull request title
    if: ${{ github.event.pull_request.draft == false && !contains(github.event.pull_request.title, '[skip chromatic]')}}
    needs: [quality-gate, test_components, test_e2e]
    steps:
      # ðŸ‘‡ Version 2 of the action
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # ðŸ‘ˆ Required to retrieve git history
      - uses: pnpm/action-setup@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      # ðŸ‘‡ Install dependencies with the same package manager used in the project (replace it as needed), e.g. yarn, npm, pnpm
      - name: Install dependencies
        run: PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=true pnpm i
      # ðŸ‘‡ Build storybook with pnpm
      - name: Build packages
        run: pnpm run build
      # ðŸ‘‡ Adds Chromatic as a step in the workflow
      - name: Publish to Chromatic
        uses: chromaui/action@latest
        # Options required to the GitHub Chromatic Action
        with:
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          # Speedup the build by not waiting until everything is sent to Chromatic
          exitOnceUploaded: true
          # TurboSnap is an advanced Chromatic feature that speeds up builds for faster UI testing and review using Git and Webpackâ€™s dependency graph
          onlyChanged: false
          # We need to manually build storybook with pnpm
          storybookBuildDir: packages/docs/dist
